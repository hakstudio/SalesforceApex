public class PasswordValidation {
    public static void isValid(String password){
        //Check password length
        if(password.length() >= 8){
            //Initialize logical expressions
            Boolean letterContains = false;
        	Boolean digitContains = false;
        	Boolean charContains = false;
        	Boolean spaceContains = false;
            
            //Split password into characters
        	String[] characters=password.split('');
            
            //Check and process chars one by one
        	for(String character : characters){
                //If letterContains is false check if character is uppercase or lowercase and assign to letterContains
            	if(!letterContains)
                    letterContains = Pattern.matches('[A-Za-zÇçÐðÝýÖöÞþÜü]', character);
                
                //If digitContains is false check if digit and assign to digitContains
            	if(!digitContains)
                	digitContains = Pattern.matches('[0-9]', character);
                
                //If charContains is false check if character and assign to charContains
            	if(!charContains)
                	charContains = Pattern.matches('[^A-Za-zÇçÐðÝýÖöÞþÜü0-9\\s]', character);
                
                //If spaceContains is false check if space and assign to spaceContains
            	if(!spaceContains)
                	spaceContains = Pattern.matches('[\\s]', character);
        	}
            
            //If spaceContains is true
            if(spaceContains)
                System.debug('No space character allowed in password');
            //If the previous expression is false and letterContains, digitContains and charContains are true
            else if(letterContains && digitContains && charContains)
                System.debug('Valid Password');
            //If the previous expression is false
            else
                System.debug('Invalid Password please create new password');
        }
        //If the length of password is less than 8
        else System.debug('Invalid Password please create new password');
    }
}

/*
Usage:
PasswordValidation.isValid('password123.'); //Valid Password

Debug results:
1234 => Invalid Password please create new password
12345678 => Invalid Password please create new password
123456789asdf => Invalid Password please create new password
123456789 asdf* => No space character allowed in password
asdfghj => Invalid Password please create new password
123456789asdf => Valid Password
*/